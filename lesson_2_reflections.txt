###
What happens when you initialize a repository? Why do you need to do it?

It creates a new git repository in the current directory. This is necessary to
demarcate tracking boundaries for git and to keep a workable scope.
###
How is the staging area different from the working directory and the
repository? What value do you think it offers?

It contains modifications ready to be added to the repository. It allows you
to determine what will be written during a commit. 
###
How can you use the staging area to make sure you have one commit per logical
change?

Use git diff to compare the staged files to the previous commit and verify
that only one logical change has been made. 
###
What are some situations when branches would be helpful in keeping your
history organized? How would branches help?

Testing new features, making versions for different audiences. It allows
changes to be made without affecting the main version.
###

How do the diagrams help you visualize the branch structure?

They provide a visual / spatial relationship of the branches. It allows you to
tell which branches are reachable.
###

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

Merging branches combines all changes from both branches into a single state.
The graphical representation helps us visualize where the branches split and
recombine.
###

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Automatic is effortless by the user but can make mistakes. Manual merging can
be tedious.
